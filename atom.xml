<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>禅心小筑</title>
  
  <subtitle>随遇而安</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yiminilife.com/"/>
  <updated>2019-07-17T09:48:10.998Z</updated>
  <id>https://yiminilife.com/</id>
  
  <author>
    <name>随风</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于GitHub Pages搭建Hexo博客</title>
    <link href="https://yiminilife.com/2019/07/17/%E5%9F%BA%E4%BA%8EGitHub-Pages-%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://yiminilife.com/2019/07/17/基于GitHub-Pages-搭建Hexo博客/</id>
    <published>2019-07-17T06:07:18.000Z</published>
    <updated>2019-07-17T09:48:10.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" rel="external nofollow noopener noreferrer" target="_blank">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装Git版本控制软件"><a href="#安装Git版本控制软件" class="headerlink" title="安装Git版本控制软件"></a>安装Git版本控制软件</h3><p>访问git<a href="http://git-scm.com/downloads" rel="external nofollow noopener noreferrer" target="_blank">官方下载页面</a>下载对应终端的git安装包，笔者使用的是macbook,所以下载Mac OS X 版本。下载页面如下图所示，点击下载对应终端的git安装包即可。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/image-20190717141834488.png" alt="image-20190717141834488.png"></p><p>安装完毕在命令终端输入git，出现如下提示表示git安装成功。window用户可以使用git bash。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_22.png" alt="Snip20190717_22"></p><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><p>访问<a href="https://nodejs.org" rel="external nofollow noopener noreferrer" target="_blank">nodejs官网</a>下载lts版本的安装包，笔者访问时的版本为10.16.0，直接点击下载安装即可。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_12.png" alt="Snip20190717_12.png"></p><p>安装完毕，在命令行输入<code>node -v</code>和<code>npm -v</code>出现版本信息，表示node安装成功。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_23.png" alt="Snip20190717_23"></p><h3 id="创建github仓库"><a href="#创建github仓库" class="headerlink" title="创建github仓库"></a>创建github仓库</h3><h4 id="创建repository"><a href="#创建repository" class="headerlink" title="创建repository"></a>创建repository</h4><p>访问<a href="https://github.com/" rel="external nofollow noopener noreferrer" target="_blank">github</a>。如果没有账号，请先注册。注册完毕，进入个人中心页面，点击左侧边栏的<code>new</code>按钮，进入创建仓库界面。输入仓库名称，<strong>yourname.github.io</strong>。点击<code>Create repository</code>完成仓库创建。</p><p>注意：</p><ol><li><strong>yourname</strong>要和你的github用户名一致，笔者这里<strong>yourname</strong>为<strong>Jing0017</strong>。</li><li>仓库后缀必需为<strong>.github.io</strong>结尾。</li></ol><p>请务必遵循这俩个条件，否则后续访问会出现404错误。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_14.png" alt="Snip20190717_14.png"></p><h4 id="设置repository的Github-Pages"><a href="#设置repository的Github-Pages" class="headerlink" title="设置repository的Github Pages"></a>设置repository的Github Pages</h4><p>完成创建后，点击<code>Settings</code>，滚动下拉至Github Pages配置模块，配置<code>Source</code>，下拉框选择master分支。如果master branch为灰色，请先按照<code>Code</code>Tab页的教程生成README.md文件，然后在回来设置Github Pages。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_20.png" alt="Snip20190717_20.png"></p><h4 id="生成ssh秘钥"><a href="#生成ssh秘钥" class="headerlink" title="生成ssh秘钥"></a>生成ssh秘钥</h4><p>为方便后续访问，选择ssh方式克隆仓库，免去每次提交时的用户和密码验证。</p><p>在终端（Terminal）输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"Github的注册邮箱地址"</span></span><br></pre></td></tr></table></figure><p>遇到提示请按<code>Enter</code>，等待秘钥生成完毕，会得到两个文件<strong>id_rsa</strong>和<strong>id_rsa.pub</strong>，用文本编辑器打开<strong>id_rsa.pub</strong>复制里面内容。访问<a href="https://github.com/settings/ssh" rel="external nofollow noopener noreferrer" target="_blank">这里</a>，点击 <code>New SSH key</code>，将复制的内容粘贴至文本框中。最后点击<code>Add SSH key</code>。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_21.png" alt="Snip20190717_21.png"></p><h2 id="安装配置hexo"><a href="#安装配置hexo" class="headerlink" title="安装配置hexo"></a>安装配置hexo</h2><p>做完上述准备工作，终于迎来了我们的主角hexo。</p><p>具体安装步骤，可以参考<a href="https://hexo.io/zh-cn/docs/" rel="external nofollow noopener noreferrer" target="_blank">官方文档</a>。不想移步的请继续往下看。</p><h3 id="下载安装hexo"><a href="#下载安装hexo" class="headerlink" title="下载安装hexo"></a>下载安装hexo</h3><h4 id="选定博客在本地存放的路径"><a href="#选定博客在本地存放的路径" class="headerlink" title="选定博客在本地存放的路径"></a>选定博客在本地存放的路径</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> &lt;your path&gt;</span><br></pre></td></tr></table></figure><p><strong>强调</strong>：强烈建议<strong>不要</strong> 选择需要管理员权限才能创建文件（夹）的文件夹。</p><h4 id="安装hexo-cli"><a href="#安装hexo-cli" class="headerlink" title="安装hexo-cli"></a>安装hexo-cli</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>等待安装完毕，在命令行输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo</span><br></pre></td></tr></table></figure><p>若出现下图，说明hexo安装成功：</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_24.png" alt="Snip20190717_24"></p><h4 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;  // 建立一个博客文件夹，并初始化博客，&lt;folder&gt;为文件夹的名称，可以随便起名字</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install // 根据package.json的dependencies配置安装所有的依赖包</span><br></pre></td></tr></table></figure><h4 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h4><p>初始化博客之后，我们可以看到项目的基本目录结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p><code>_config.yml</code>里修改博客的基础配置。可以参考<a href="https://hexo.io/zh-cn/docs/configuration" rel="external nofollow noopener noreferrer" target="_blank">官方文档</a>。下面我们具体看一下<code>_config.yml</code>文件全貌。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="comment"># The title of your website</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="comment"># The subtitle of your website</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment"># The description of your website</span></span><br><span class="line"><span class="attr">author:</span> <span class="comment"># Your name</span></span><br><span class="line"><span class="attr">language:</span> <span class="comment"># The language of your website</span></span><br><span class="line"><span class="attr">timezone:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">http://yoursite.com/child</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  tab_replace:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span></span><br></pre></td></tr></table></figure><h5 id="完善网站信息-Site"><a href="#完善网站信息-Site" class="headerlink" title="完善网站信息(Site)"></a>完善网站信息(Site)</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">禅心小筑</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">随遇而安</span>   </span><br><span class="line"><span class="attr">description:</span> <span class="string">菩提本无树，明镜亦非台。本来无一物，何处惹尘埃。</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">技术</span> <span class="string">生活</span> <span class="string">修行</span> <span class="string">求道。</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">随风</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure><p>language和timezone的配置，详细可参考<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes" rel="external nofollow noopener noreferrer" target="_blank">语言规范</a>和<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" rel="external nofollow noopener noreferrer" target="_blank">时区规范</a>。</p><p>注意：language字段配置的zh-CN 必需和相关主题文件夹下 <code>/themes/next/languages</code>里面的国际化文件相匹配，否则配置将不生效，显示默认英文配置。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_25.png" alt="Snip20190717_25"></p><h5 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h5><p>hexo的默认主题是 <code>landscape</code>，参看<a href="https://hexo.io/themes/" rel="external nofollow noopener noreferrer" target="_blank">这里</a>可以选择自己心仪的主题，笔者这里选择的是<a href="https://theme-next.org/" rel="external nofollow noopener noreferrer" target="_blank">next</a>，安装教程可参看<a href="https://github.com/theme-next/hexo-theme-next" rel="external nofollow noopener noreferrer" target="_blank">这里</a>。简要步骤如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt; </span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>然后在_config.yml中配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><h5 id="配置部署（Deploy）"><a href="#配置部署（Deploy）" class="headerlink" title="配置部署（Deploy）"></a>配置部署（Deploy）</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:Jing0017/Jing0017.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>此处repo配置为准备工作中我们创建的仓库。选择使用ssh方式克隆。branch选择master分支，和github page的设置相对应。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_26.png" alt="Snip20190717_26"></p><p>至此我们完成了hexo的安装与配置。</p><h2 id="发表第一篇文章"><a href="#发表第一篇文章" class="headerlink" title="发表第一篇文章"></a>发表第一篇文章</h2><h3 id="建立分类"><a href="#建立分类" class="headerlink" title="建立分类"></a>建立分类</h3><p>命令终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"categories"</span></span><br></pre></td></tr></table></figure><p>在/source/categories目录下找到<code>index.md</code>文件打开写入如下内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2019-07-15 11:49:33</span><br><span class="line">type: "categories"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="建立标签"><a href="#建立标签" class="headerlink" title="建立标签"></a>建立标签</h3><p>同理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"tags"</span></span><br></pre></td></tr></table></figure><p>在/source/tags目录下找到<code>index.md</code>文件打开写入如下内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2019-07-15 11:49:20</span><br><span class="line">type: "tags"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="新建一篇文章"><a href="#新建一篇文章" class="headerlink" title="新建一篇文章"></a>新建一篇文章</h3><h4 id="新建文章并完成写作"><a href="#新建文章并完成写作" class="headerlink" title="新建文章并完成写作"></a>新建文章并完成写作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"静夜思"</span></span><br></pre></td></tr></table></figure><p>在/source/_post目录下找到 <code>静夜思.md</code>文件打开写入如下内容：</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_27.png" alt="Snip20190717_27"></p><p>详细解释如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: 静夜思 //文章的标题</span><br><span class="line">date: 2019-07-17 16:54:51</span><br><span class="line">categories: 唐诗 //注意:之后有空格，将文章划分到唐诗的分类中</span><br><span class="line">tags: 李白 //给文章打上李白的标签</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">床前明月光，疑是地上霜。</span><br><span class="line">举头望明月，低头思故乡。</span><br></pre></td></tr></table></figure><h4 id="本地访问博客"><a href="#本地访问博客" class="headerlink" title="本地访问博客"></a>本地访问博客</h4><h5 id="markdown生成html"><a href="#markdown生成html" class="headerlink" title="markdown生成html"></a>markdown生成html</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate //简写 hexo g</span><br></pre></td></tr></table></figure><p>此时发现文件目录多了public文件夹，此文件夹下是根据/source/_post/目录下的所有markdown文件生成的html，css，js等静态文件。</p><h5 id="启动本地服务"><a href="#启动本地服务" class="headerlink" title="启动本地服务"></a>启动本地服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server // 简写 hexo s</span><br></pre></td></tr></table></figure><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_28.png" alt="Snip20190717_28"></p><p>根据提示访问<a href="http://localhost:4000。" rel="external nofollow noopener noreferrer" target="_blank">http://localhost:4000。</a></p><p>发现主页新增了一篇静夜思的文章，切分类为唐诗，标签为李白。</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_33.png" alt="Snip20190717_33.png"></p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_35.png" alt="Snip20190717_35.png"></p><p>笔者这里已经对主题进行了优化，所以和next的默认样式出入较大。</p><h4 id="通过Github-Page-访问博客"><a href="#通过Github-Page-访问博客" class="headerlink" title="通过Github Page 访问博客"></a>通过Github Page 访问博客</h4><p>执行hexo 部署命令，将生成的静态文件推送至我们的github仓库(yourname.github.io)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy //简写 hexo d</span><br></pre></td></tr></table></figure><p>然后直接访问<a href="https://yourname.github.io即可。" rel="external nofollow noopener noreferrer" target="_blank">https://yourname.github.io即可。</a></p><h4 id="通过域名访问hexo博客"><a href="#通过域名访问hexo博客" class="headerlink" title="通过域名访问hexo博客"></a>通过域名访问hexo博客</h4><h6 id="购置域名"><a href="#购置域名" class="headerlink" title="购置域名"></a>购置域名</h6><p>从各大域名提供商购置个人域名，笔者之前在阿里万网购置过域名，此处省略域名购置流程。可以自行百度。</p><h6 id="Github-Pages-配置域名"><a href="#Github-Pages-配置域名" class="headerlink" title="Github Pages 配置域名"></a>Github Pages 配置域名</h6><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_36.png" alt="Snip20190717_36"></p><p>在仓库的<code>Settings</code>tab页中找到GitHub Pages 将<code>Custom domain</code> 设置为自己的域名。此时可以看到<code>Code</code>tab</p><p>页中会生成一个CNAME文件，保存着我们的域名信息。</p><h6 id="域名配置DNS解析"><a href="#域名配置DNS解析" class="headerlink" title="域名配置DNS解析"></a>域名配置DNS解析</h6><p>新增俩条域名解析</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_37.png" alt="Snip20190717_37"></p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_38.png" alt="Snip20190717_38"></p><p>记录类型为<strong>CNAME</strong>，主机记录分别为<strong>@</strong>和<strong>www</strong>,记录值填<strong>yourname.github.io</strong>。等待域名解析生效。</p><p>域名解析生效后，直接访问<strong>http://你的域名</strong>即可访问hexo博客。效果如下：</p><p><img src="/2019/07/17/基于GitHub-Pages-搭建Hexo博客/Snip20190717_43.png" alt="Snip20190717_43"></p><p><strong>注意：</strong>  CNAME文件在下次 hexo deploy的时候就消失了，需要重新创建，这样就很繁琐。</p><p>网上推荐的解决方法我比较推荐新增hexo-generator-cname插件实现永久保留。</p><p>具体操作如下：</p><p>在博客根目录下（source 同级目录）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-cname --save //下载hexo-generator-cname库并将依赖写入package.json</span><br></pre></td></tr></table></figure><p>在_config.yml 找到Plugins的注释，在其下方增加:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Plugins:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-cname</span></span><br></pre></td></tr></table></figure><p>:smile:感谢你看到了最后，至此我们完成了hexo博客的搭建。对主题优化有兴趣的读者可以留意后续的文章。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a href=&quot;http://daringfireball.net/proje
      
    
    </summary>
    
      <category term="技术" scheme="https://yiminilife.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="https://yiminilife.com/tags/hexo/"/>
    
      <category term="git" scheme="https://yiminilife.com/tags/git/"/>
    
      <category term="node" scheme="https://yiminilife.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Markdown For Typora</title>
    <link href="https://yiminilife.com/2019/07/16/Markdown-For-Typora/"/>
    <id>https://yiminilife.com/2019/07/16/Markdown-For-Typora/</id>
    <published>2019-07-16T12:22:35.000Z</published>
    <updated>2019-07-16T13:18:18.458Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p><strong>Markdown</strong> is created by <a href="http://daringfireball.net/" rel="external nofollow noopener noreferrer" target="_blank">Daring Fireball</a>; the original guideline is <a href="http://daringfireball.net/projects/markdown/syntax" rel="external nofollow noopener noreferrer" target="_blank">here</a>. Its syntax, however, varies between different parsers or editors. <strong>Typora</strong> is using <a href="https://help.github.com/articles/github-flavored-markdown/" rel="external nofollow noopener noreferrer" target="_blank">GitHub Flavored Markdown</a>.</p><h2 id="Block-Elements"><a href="#Block-Elements" class="headerlink" title="Block Elements"></a>Block Elements</h2><h3 id="Paragraph-and-line-breaks"><a href="#Paragraph-and-line-breaks" class="headerlink" title="Paragraph and line breaks"></a>Paragraph and line breaks</h3><p>A paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by two or more blank lines. In Typora, you only need one blank line (press <code>Return</code> once) to create a new paragraph.</p><p>Press <code>Shift</code> + <code>Return</code> to create a single line break. Most other markdown parsers will ignore single line breaks, so in order to make other markdown parsers recognize your line break, you can leave two spaces at the end of the line, or insert <code>&lt;br/&gt;</code>.</p><h3 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h3><p>Headers use 1-6 hash (<code>#</code>) characters at the start of the line, corresponding to header levels 1-6. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># This is an H1</span></span><br><span class="line"></span><br><span class="line"><span class="section">## This is an H2</span></span><br><span class="line"></span><br><span class="line"><span class="section">###### This is an H6</span></span><br></pre></td></tr></table></figure><p>In Typora, input ‘#’s followed by title content, and press <code>Return</code> key will create a header.</p><h3 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h3><p>Markdown uses email-style &gt; characters for block quoting. They are presented as:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; This is a blockquote with two paragraphs. This is first paragraph.</span></span><br><span class="line">&gt;</span><br><span class="line"><span class="quote">&gt; This is second pragraph. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="quote">&gt; This is another blockquote with one paragraph. There is three empty line to seperate two blockquote.</span></span><br></pre></td></tr></table></figure><p>In Typora, inputting ‘&gt;’ followed by your quote contents will generate a quote block. Typora will insert a proper ‘&gt;’ or line break for you. Nested block quotes (a block quote inside another block quote) by adding additional levels of ‘&gt;’.</p><h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><p>Input <code>* list item 1</code> will create an unordered list - the <code>*</code> symbol can be replace with <code>+</code> or <code>-</code>.</p><p>Input <code>1. list item 1</code> will create an ordered list - their markdown source code is as follows:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## un-ordered list</span></span><br><span class="line"><span class="bullet">*   </span>Red</span><br><span class="line"><span class="bullet">*   </span>Green</span><br><span class="line"><span class="bullet">*   </span>Blue</span><br><span class="line"></span><br><span class="line"><span class="section">## ordered list</span></span><br><span class="line"><span class="bullet">1.  </span>Red</span><br><span class="line"><span class="bullet">2. </span>Green</span><br><span class="line"><span class="bullet">3.</span>Blue</span><br></pre></td></tr></table></figure><h3 id="Task-List"><a href="#Task-List" class="headerlink" title="Task List"></a>Task List</h3><p>Task lists are lists with items marked as either [ ] or [x] (incomplete or complete). For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>[ ] a task list item</span><br><span class="line"><span class="bullet">- </span>[ ] list syntax required</span><br><span class="line"><span class="bullet">- </span>[ ] normal <span class="strong">**formatting**</span>, @mentions, #1234 refs</span><br><span class="line"><span class="bullet">- </span>[ ] incomplete</span><br><span class="line"><span class="bullet">- </span>[x] completed</span><br></pre></td></tr></table></figure><p>You can change the complete/incomplete state by clicking on the checkbox before the item.</p><h3 id="Fenced-Code-Blocks"><a href="#Fenced-Code-Blocks" class="headerlink" title="(Fenced) Code Blocks"></a>(Fenced) Code Blocks</h3><p>Typora only supports fences in GitHub Flavored Markdown. Original code blocks in markdown are not supported.</p><p>Using fences is easy: Input ``` and press <code>return</code>. Add an optional language identifier after ``` and we’ll run it through syntax highlighting:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Here's an example:</span><br><span class="line"></span><br><span class="line"><span class="code">```</span></span><br><span class="line"><span class="code">function test() &#123;</span></span><br><span class="line"><span class="code">  console.log("notice the blank line before this function?");</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">```</span></span><br><span class="line"></span><br><span class="line">syntax highlighting:</span><br><span class="line"><span class="code">```ruby</span></span><br><span class="line"><span class="code">require 'redcarpet'</span></span><br><span class="line"><span class="code">markdown = Redcarpet.new("Hello World!")</span></span><br><span class="line"><span class="code">puts markdown.to_html</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><h3 id="Math-Blocks"><a href="#Math-Blocks" class="headerlink" title="Math Blocks"></a>Math Blocks</h3><p>You can render <em>LaTeX</em> mathematical expressions using <strong>MathJax</strong>.</p><p>To add a mathematical expression, input <code>$$</code> and press the ‘Return’ key. This will trigger an input field which accepts <em>Tex/LaTex</em> source. For example:<br>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>$$<br>In the markdown source file, the math block is a <em>LaTeX</em> expression wrapped by a pair of ‘$$’ marks:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;<span class="emphasis">_1 \times \mathbf&#123;V&#125;_</span>2 =  \begin&#123;vmatrix&#125;</span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>You can find more details <a href="http://support.typora.io/Math/" rel="external nofollow noopener noreferrer" target="_blank">here</a>.</p><h3 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h3><p>Input <code>| First Header  | Second Header |</code> and press the <code>return</code> key. This will create a table with two columns.</p><p>After a table is created, putting focus on that table will open up a toolbar for the table where you can resize, align, or delete the table. You can also use the context menu to copy and add/delete individual columns/rows.</p><p>The full syntax for tables is described below, but it is not necessary to know the full syntax in detail as the markdown source code for tables is generated automatically by Typora.</p><p>In markdown source code, they look like:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| First Header  | Second Header |</span><br><span class="line">| ------------- | ------------- |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br><span class="line">| Content Cell  | Content Cell  |</span><br></pre></td></tr></table></figure><p>You can also include inline Markdown such as links, bold, italics, or strikethrough in the table.</p><p>Finally, by including colons (<code>:</code>) within the header row, you can define text in that column to be left-aligned, right-aligned, or center-aligned:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Left-Aligned  | Center Aligned  | Right Aligned |</span><br><span class="line">| :------------ |:---------------:| -----:|</span><br><span class="line">| col 3 is      | some wordy text | $1600 |</span><br><span class="line">| col 2 is      | centered        |   $12 |</span><br><span class="line">| zebra stripes | are neat        |    $1 |</span><br></pre></td></tr></table></figure><p>A colon on the left-most side indicates a left-aligned column; a colon on the right-most side indicates a right-aligned column; a colon on both sides indicates a center-aligned column.</p><h3 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">You can create footnotes like this[^footnote].</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^footnote</span>]: <span class="link">Here is the *text* of the **footnote**.</span></span><br></pre></td></tr></table></figure><p>will produce:</p><p>You can create footnotes like this[^footnote].</p><p>[^footnote]: Here is the <em>text</em> of the <strong>footnote</strong>.</p><p>Hover over the ‘footnote’ superscript to see content of the footnote.</p><h3 id="Horizontal-Rules"><a href="#Horizontal-Rules" class="headerlink" title="Horizontal Rules"></a>Horizontal Rules</h3><p>Inputting <code>***</code> or <code>---</code> on a blank line and pressing <code>return</code> will draw a horizontal line.</p><hr><h3 id="YAML-Front-Matter"><a href="#YAML-Front-Matter" class="headerlink" title="YAML Front Matter"></a>YAML Front Matter</h3><p>Typora now supports <a href="http://jekyllrb.com/docs/frontmatter/" rel="external nofollow noopener noreferrer" target="_blank">YAML Front Matter</a>. Input <code>---</code> at the top of the article and then press <code>Return</code> to introduce a metadata block. Alternatively, you can insert a metadata block from the top menu of Typora.</p><h3 id="Table-of-Contents-TOC"><a href="#Table-of-Contents-TOC" class="headerlink" title="Table of Contents (TOC)"></a>Table of Contents (TOC)</h3><p>Input <code>[toc]</code> and press the <code>Return</code> key. This will create a  “Table of Contents” section. The TOC extracts all headers from the document, and its contents are updated automatically as you add to the document.</p><h2 id="Span-Elements"><a href="#Span-Elements" class="headerlink" title="Span Elements"></a>Span Elements</h2><p>Span elements will be parsed and rendered right after typing. Moving the cursor in middle of those span elements will expand those elements into markdown source. Below is an explanation of the syntax for each span element.</p><h3 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h3><p>Markdown supports two styles of links: inline and reference.</p><p>In both styles, the link text is delimited by [square brackets].</p><p>To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [<span class="string">an example</span>](<span class="link">http://example.com/</span>) inline link.</span><br></pre></td></tr></table></figure><p>will produce:</p><p>This is <a href="http://example.com/" rel="external nofollow noopener noreferrer" target="_blank">an example</a> inline link. (<code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot;&gt;</code>)</p><h4 id="Internal-Links"><a href="#Internal-Links" class="headerlink" title="Internal Links"></a>Internal Links</h4><p><strong>You can set the href to headers</strong>, which will create a bookmark that allow you to jump to that section after clicking. For example:</p><p>Command(on Windows: Ctrl) + Click <a href="#block-elements">This link</a> will jump to header <code>Block Elements</code>. To see how to write that, please move cursor or click that link with <code>⌘</code> key pressed to expand the element into markdown source.</p><h4 id="Reference-Links"><a href="#Reference-Links" class="headerlink" title="Reference Links"></a>Reference Links</h4><p>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is [<span class="string">an example</span>][<span class="symbol">id</span>] reference-style link.</span><br><span class="line"></span><br><span class="line">Then, anywhere in the document, you define your link label on a line by itself like this:</span><br><span class="line"></span><br><span class="line">[<span class="symbol">id</span>]: <span class="link">http://example.com/  "Optional Title Here"</span></span><br></pre></td></tr></table></figure><p>In Typora, they will be rendered like so:</p><p>This is <a href="http://example.com/" title="Optional Title Here" rel="external nofollow noopener noreferrer" target="_blank">an example</a> reference-style link.</p><p>The implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — for example, to link the word “Google” to the google.com web site, you could simply write:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Google</span>][<span class="symbol"></span>]</span><br><span class="line">And then define the link:</span><br><span class="line"></span><br><span class="line">[<span class="symbol">Google</span>]: <span class="link">http://google.com/</span></span><br></pre></td></tr></table></figure><p>In Typora, clicking the link will expand it for editing, and command+click will open the hyperlink in your web browser.</p><h3 id="URLs"><a href="#URLs" class="headerlink" title="URLs"></a>URLs</h3><p>Typora allows you to insert URLs as links, wrapped by <code>&lt;</code>brackets<code>&gt;</code>.</p><p><code>&lt;i@typora.io&gt;</code> becomes <a href="mailto:&#105;&#x40;&#x74;&#x79;&#x70;&#x6f;&#x72;&#97;&#46;&#x69;&#x6f;" target="_blank" rel="noopener">&#105;&#x40;&#x74;&#x79;&#x70;&#x6f;&#x72;&#97;&#46;&#x69;&#x6f;</a>.</p><p>Typora will also automatically link standard URLs. e.g: <a href="http://www.google.com" rel="external nofollow noopener noreferrer" target="_blank">www.google.com</a>.</p><h3 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h3><p>Images have similar syntax as links, but they require an additional <code>!</code> char before the start of the link. The syntax for inserting an image looks like this:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Alt text</span>](<span class="link">/path/to/img.jpg</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">Alt text</span>](<span class="link">/path/to/img.jpg "Optional title"</span>)</span><br></pre></td></tr></table></figure><p>You are able to use drag &amp; drop to insert an image from an image file or your web browser. You can modify the markdown source code by clicking on the image. A relative path will be used if the image that is added using drag &amp; drop is in same directory or sub-directory as the document you’re currently editing.</p><p>If you’re using markdown for building websites, you may specify a URL prefix for the image preview on your local computer with property <code>typora-root-url</code> in YAML Front Matters. For example, input <code>typora-root-url:/User/Abner/Website/typora.io/</code> in YAML Front Matters, and then <code>![alt](/blog/img/test.png)</code> will be treated as <code>![alt](file:///User/Abner/Website/typora.io/blog/img/test.png)</code> in Typora.</p><p>You can find more details <a href="https://support.typora.io/Images/" rel="external nofollow noopener noreferrer" target="_blank">here</a>.</p><h3 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h3><p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an HTML <code>&lt;em&gt;</code> tag. E.g:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*single asterisks*</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">_single underscores_</span></span><br></pre></td></tr></table></figure><p>output:</p><p><em>single asterisks</em></p><p><em>single underscores</em></p><p>GFM will ignore underscores in words, which is commonly used in code and names, like this:</p><blockquote><p>wow_great_stuff</p><p>do_this_and_do_that_and_another_thing.</p></blockquote><p>To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="emphasis">*this text is surrounded by literal asterisks\*</span></span><br></pre></td></tr></table></figure><p>Typora recommends using the <code>*</code> symbol.</p><h3 id="Strong"><a href="#Strong" class="headerlink" title="Strong"></a>Strong</h3><p>A double <code>*</code> or <code>_</code> will cause its enclosed contents to be wrapped with an HTML <code>&lt;strong&gt;</code> tag, e.g:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**double asterisks**</span></span><br><span class="line"></span><br><span class="line"><span class="strong">__double underscores__</span></span><br></pre></td></tr></table></figure><p>output:</p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><p>Typora recommends using the <code>**</code> symbol.</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>To indicate an inline span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use the <span class="code">`printf()`</span> function.</span><br></pre></td></tr></table></figure><p>will produce:</p><p>Use the <code>printf()</code> function.</p><h3 id="Strikethrough"><a href="#Strikethrough" class="headerlink" title="Strikethrough"></a>Strikethrough</h3><p>GFM adds syntax to create strikethrough text, which is missing from standard Markdown.</p><p><code>~~Mistaken text.~~</code> becomes <del>Mistaken text.</del></p><h3 id="Underlines"><a href="#Underlines" class="headerlink" title="Underlines"></a>Underlines</h3><p>Underline is powered by raw HTML.</p><p><code>&lt;u&gt;Underline&lt;/u&gt;</code> becomes <u>Underline</u>.</p><h3 id="Emoji-😄"><a href="#Emoji-😄" class="headerlink" title="Emoji 😄"></a>Emoji 😄</h3><p>Input emoji with syntax <code>:smile:</code>.</p><p>User can trigger auto-complete suggestions for emoji by pressing <code>ESC</code> key, or trigger it automatically after enabling it on preference panel. Also, inputting UTF-8 emoji characters directly is also supported by going to <code>Edit</code> -&gt; <code>Emoji &amp; Symbols</code> in the menu bar (macOS).</p><h3 id="Inline-Math"><a href="#Inline-Math" class="headerlink" title="Inline Math"></a>Inline Math</h3><p>To use this feature, please enable it first in the <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then, use <code>$</code> to wrap a TeX command. For example: <code>$\lim_{x \to \infty} \exp(-x) = 0$</code> will be rendered as LaTeX command.</p><p>To trigger inline preview for inline math: input “$”, then press the <code>ESC</code> key, then input a TeX command.</p><p>You can find more details <a href="http://support.typora.io/Math/" rel="external nofollow noopener noreferrer" target="_blank">here</a>.</p><h3 id="Subscript"><a href="#Subscript" class="headerlink" title="Subscript"></a>Subscript</h3><p>To use this feature, please enable it first in the <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then, use <code>~</code> to wrap subscript content. For example: <code>H~2~O</code>, <code>X~long\ text~</code>/</p><h3 id="Superscript"><a href="#Superscript" class="headerlink" title="Superscript"></a>Superscript</h3><p>To use this feature, please enable it first in the <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then, use <code>^</code> to wrap superscript content. For example: <code>X^2^</code>.</p><h3 id="Highlight"><a href="#Highlight" class="headerlink" title="Highlight"></a>Highlight</h3><p>To use this feature, please enable it first in the <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab. Then, use <code>==</code> to wrap highlight content. For example: <code>==highlight==</code>.</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>You can use HTML to style content what pure Markdown does not support. For example, use <code>&lt;span style=&quot;color:red&quot;&gt;this text is red&lt;/span&gt;</code> to add text with red color.</p><h3 id="Embed-Contents"><a href="#Embed-Contents" class="headerlink" title="Embed Contents"></a>Embed Contents</h3><p>Some websites provide iframe-based embed code which you can also paste into Typora. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe height='265' scrolling='no' title='Fancy Animated SVG Menu' src='http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>You can use the <code>&lt;video&gt;</code> HTML tag to embed videos. For example:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video src="xxx.mp4" /&gt;</span><br></pre></td></tr></table></figure><h3 id="Other-HTML-Support"><a href="#Other-HTML-Support" class="headerlink" title="Other HTML Support"></a>Other HTML Support</h3><p>You can find more details <a href="http://support.typora.io/HTML/" rel="external nofollow noopener noreferrer" target="_blank">here</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt; is created by &lt;a hre
      
    
    </summary>
    
      <category term="技术" scheme="https://yiminilife.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="typora" scheme="https://yiminilife.com/tags/typora/"/>
    
      <category term="markdown" scheme="https://yiminilife.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客备份</title>
    <link href="https://yiminilife.com/2019/07/15/hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD/"/>
    <id>https://yiminilife.com/2019/07/15/hexo博客备份/</id>
    <published>2019-07-15T11:02:57.000Z</published>
    <updated>2019-07-16T09:22:21.731Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、将本地hexo博客的仓库初始化为git项目"><a href="#一、将本地hexo博客的仓库初始化为git项目" class="headerlink" title="一、将本地hexo博客的仓库初始化为git项目"></a>一、将本地hexo博客的仓库初始化为git项目</h3><p>注意：检查一下theme文件夹下的主题。例如如果themes/next，此目录下若有.git文件夹，请删除这个.git文件夹。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//默认已经在项目根路径下</span><br><span class="line">git init  //初始化本地仓库</span><br></pre></td></tr></table></figure><h3 id="二、配置-gitignore文件"><a href="#二、配置-gitignore文件" class="headerlink" title="二、配置.gitignore文件"></a>二、配置.gitignore文件</h3><p>新建.gitignore（有则忽略），在文件中输入以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure><h3 id="三、将本地仓库和xxx-github-io仓库的url配对，推送本地仓库文件至远端的hexo分支"><a href="#三、将本地仓库和xxx-github-io仓库的url配对，推送本地仓库文件至远端的hexo分支" class="headerlink" title="三、将本地仓库和xxx.github.io仓库的url配对，推送本地仓库文件至远端的hexo分支"></a>三、将本地仓库和xxx.github.io仓库的url配对，推送本地仓库文件至远端的hexo分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"blog hexo"</span></span><br><span class="line">git branch hexo  //新建hexo分支</span><br><span class="line">git checkout hexo  //切换到hexo分支上</span><br><span class="line">git remote add origin git@github.com:xxx/xxx.github.io.git  //xxx为github用户名</span><br><span class="line">git push origin hexo  //push到Github项目的hexo分支上</span><br></pre></td></tr></table></figure><h3 id="四、在其他终端获取hexo仓库。"><a href="#四、在其他终端获取hexo仓库。" class="headerlink" title="四、在其他终端获取hexo仓库。"></a>四、在其他终端获取hexo仓库。</h3><h4 id="1-从github上拉取hexo分支的代码"><a href="#1-从github上拉取hexo分支的代码" class="headerlink" title="1.从github上拉取hexo分支的代码"></a>1.从github上拉取hexo分支的代码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b hexo git@github.com:user/user.github.io.git  //将Github中hexo分支<span class="built_in">clone</span>到本地</span><br><span class="line"><span class="built_in">cd</span> user.github.io</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="2-写文章并进行备份和部署"><a href="#2-写文章并进行备份和部署" class="headerlink" title="2.写文章并进行备份和部署"></a>2.写文章并进行备份和部署</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//进入user.github.io文件夹,应是hexo分支</span><br><span class="line">git pull origin hexo //本地和远端的融合</span><br><span class="line">hexo new post <span class="string">"new post name"</span>  //写新文章</span><br><span class="line">git add <span class="built_in">source</span></span><br><span class="line">git commit -m <span class="string">"xxx"</span></span><br><span class="line">git push origin hexo  //备份</span><br><span class="line">hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、将本地hexo博客的仓库初始化为git项目&quot;&gt;&lt;a href=&quot;#一、将本地hexo博客的仓库初始化为git项目&quot; class=&quot;headerlink&quot; title=&quot;一、将本地hexo博客的仓库初始化为git项目&quot;&gt;&lt;/a&gt;一、将本地hexo博客的仓库初始化
      
    
    </summary>
    
      <category term="技术" scheme="https://yiminilife.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="https://yiminilife.com/tags/hexo/"/>
    
      <category term="备份" scheme="https://yiminilife.com/tags/%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
</feed>
